import javax.swing.*;
import java.awt.*;
import java.awt.event.*;

public class TicTacToe extends JPanel implements MouseListener {
    private final char[][] board = new char[3][3];
    private char turn = 'X';
    private boolean gameOver = false;
    private String message = "TicTacToe — X to move";

    public TicTacToe() {
        setPreferredSize(new Dimension(480, 480));
        setBackground(Color.WHITE);
        addMouseListener(this);
    }

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        int w = getWidth(), h = getHeight();
        int cell = Math.min(w, h) / 3;

        // Grid
        g.setColor(Color.LIGHT_GRAY);
        for (int i = 1; i < 3; i++) {
            g.fillRect(i * cell - 2, 0, 4, h);
            g.fillRect(0, i * cell - 2, w, 4);
        }

        // Marks
        Graphics2D g2 = (Graphics2D) g;
        g2.setStroke(new BasicStroke(6f, BasicStroke.CAP_ROUND, BasicStroke.JOIN_ROUND));
        for (int r = 0; r < 3; r++) {
            for (int c = 0; c < 3; c++) {
                int x = c * cell, y = r * cell;
                char v = board[r][c];
                if (v == 'X') {
                    g2.setColor(new Color(30, 144, 255));
                    g2.drawLine(x + 20, y + 20, x + cell - 20, y + cell - 20);
                    g2.drawLine(x + cell - 20, y + 20, x + 20, y + cell - 20);
                } else if (v == 'O') {
                    g2.setColor(new Color(220, 20, 60));
                    g2.drawOval(x + 20, y + 20, cell - 40, cell - 40);
                }
            }
        }

        // Message bar
        g.setColor(new Color(0,0,0,180));
        g.fillRect(0, h - 36, w, 36);
        g.setColor(Color.WHITE);
        g.setFont(g.getFont().deriveFont(Font.BOLD, 16f));
        g.drawString(message, 12, h - 12);
    }

    private void handleClick(int mx, int my) {
        if (gameOver) { reset(); return; }

        int cell = Math.min(getWidth(), getHeight()) / 3;
        int c = mx / cell, r = my / cell;
        if (r < 0 || r >= 3 || c < 0 || c >= 3) return;
        if (board[r][c] != '\0') return;

        board[r][c] = turn;
        if (checkWin(turn)) {
            message = turn + " wins!  (click to play again)";
            gameOver = true;
        } else if (isFull()) {
            message = "Draw!  (click to play again)";
            gameOver = true;
        } else {
            turn = (turn == 'X') ? 'O' : 'X';
            message = "TicTacToe — " + turn + " to move";
        }
        repaint();
    }

    private boolean isFull() {
        for (char[] row : board)
            for (char v : row)
                if (v == '\0') return false;
        return true;
    }

    private boolean checkWin(char p) {
        for (int i = 0; i < 3; i++) {
            if (board[i][0]==p && board[i][1]==p && board[i][2]==p) return true;
            if (board[0][i]==p && board[1][i]==p && board[2][i]==p) return true;
        }
        return (board[0][0]==p && board[1][1]==p && board[2][2]==p) ||
               (board[0][2]==p && board[1][1]==p && board[2][0]==p);
    }

    private void reset() {
        for (int r=0;r<3;r++) for (int c=0;c<3;c++) board[r][c]='\0';
        turn = 'X';
        gameOver = false;
        message = "TicTacToe — X to move";
        repaint();
    }

    // MouseListener
    public void mouseClicked(MouseEvent e){ handleClick(e.getX(), e.getY()); }
    public void mousePressed(MouseEvent e){}
    public void mouseReleased(MouseEvent e){}
    public void mouseEntered(MouseEvent e){}
    public void mouseExited(MouseEvent e){}

    // Entry point
    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> {
            JFrame f = new JFrame("TicTacToe");
            f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            TicTacToe game = new TicTacToe();
            f.setContentPane(game);
            f.pack();
            f.setLocationRelativeTo(null);
            f.setVisible(true);
        });
    }
}